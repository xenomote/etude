// Code generated by "stringer -type Kind"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ERROR-0]
	_ = x[END-1]
	_ = x[COMP-2]
	_ = x[TYPE-3]
	_ = x[FUNC-4]
	_ = x[IF-5]
	_ = x[OR-6]
	_ = x[ON-7]
	_ = x[FOR-8]
	_ = x[COPY-9]
	_ = x[RETURN-10]
	_ = x[ELLIPSIS-11]
	_ = x[DOUBLE_PLUS-12]
	_ = x[DOUBLE_MINUS-13]
	_ = x[DOUBLE_EQUALS-14]
	_ = x[EXCLAIM_EQUALS-15]
	_ = x[LESS_EQUALS-16]
	_ = x[GREATER_EQUALS-17]
	_ = x[DOUBLE_AMPERSAND-18]
	_ = x[DOUBLE_PIPE-19]
	_ = x[SHIFT_LEFT-20]
	_ = x[SHIFT_RIGHT-21]
	_ = x[NUMBER-22]
	_ = x[STRING-23]
	_ = x[BOOLEAN-24]
	_ = x[IDENTIFIER-25]
	_ = x[EXCLAIM-33]
	_ = x[EQUALS-61]
	_ = x[LESS-60]
	_ = x[GREATER-62]
	_ = x[CURLY_LEFT-123]
	_ = x[CURLY_RIGHT-125]
	_ = x[ROUND_LEFT-40]
	_ = x[ROUND_RIGHT-41]
	_ = x[SQUARE_LEFT-91]
	_ = x[SQUARE_RIGHT-93]
	_ = x[MINUS-45]
	_ = x[PLUS-43]
	_ = x[STAR-42]
	_ = x[SLASH-47]
	_ = x[CARRET-94]
	_ = x[PERCENT-37]
	_ = x[ADDRESS-64]
	_ = x[QUESTION-63]
	_ = x[HASH-35]
	_ = x[TILDE-126]
	_ = x[COLON-58]
	_ = x[COMMA-44]
	_ = x[PERIOD-46]
}

const _Kind_name = "ERRORENDCOMPTYPEFUNCIFORONFORCOPYRETURNELLIPSISDOUBLE_PLUSDOUBLE_MINUSDOUBLE_EQUALSEXCLAIM_EQUALSLESS_EQUALSGREATER_EQUALSDOUBLE_AMPERSANDDOUBLE_PIPESHIFT_LEFTSHIFT_RIGHTNUMBERSTRINGBOOLEANIDENTIFIEREXCLAIMHASHPERCENTROUND_LEFTROUND_RIGHTSTARPLUSCOMMAMINUSPERIODSLASHCOLONLESSEQUALSGREATERQUESTIONADDRESSSQUARE_LEFTSQUARE_RIGHTCARRETCURLY_LEFTCURLY_RIGHTTILDE"

var _Kind_map = map[Kind]string{
	0:   _Kind_name[0:5],
	1:   _Kind_name[5:8],
	2:   _Kind_name[8:12],
	3:   _Kind_name[12:16],
	4:   _Kind_name[16:20],
	5:   _Kind_name[20:22],
	6:   _Kind_name[22:24],
	7:   _Kind_name[24:26],
	8:   _Kind_name[26:29],
	9:   _Kind_name[29:33],
	10:  _Kind_name[33:39],
	11:  _Kind_name[39:47],
	12:  _Kind_name[47:58],
	13:  _Kind_name[58:70],
	14:  _Kind_name[70:83],
	15:  _Kind_name[83:97],
	16:  _Kind_name[97:108],
	17:  _Kind_name[108:122],
	18:  _Kind_name[122:138],
	19:  _Kind_name[138:149],
	20:  _Kind_name[149:159],
	21:  _Kind_name[159:170],
	22:  _Kind_name[170:176],
	23:  _Kind_name[176:182],
	24:  _Kind_name[182:189],
	25:  _Kind_name[189:199],
	33:  _Kind_name[199:206],
	35:  _Kind_name[206:210],
	37:  _Kind_name[210:217],
	40:  _Kind_name[217:227],
	41:  _Kind_name[227:238],
	42:  _Kind_name[238:242],
	43:  _Kind_name[242:246],
	44:  _Kind_name[246:251],
	45:  _Kind_name[251:256],
	46:  _Kind_name[256:262],
	47:  _Kind_name[262:267],
	58:  _Kind_name[267:272],
	60:  _Kind_name[272:276],
	61:  _Kind_name[276:282],
	62:  _Kind_name[282:289],
	63:  _Kind_name[289:297],
	64:  _Kind_name[297:304],
	91:  _Kind_name[304:315],
	93:  _Kind_name[315:327],
	94:  _Kind_name[327:333],
	123: _Kind_name[333:343],
	125: _Kind_name[343:354],
	126: _Kind_name[354:359],
}

func (i Kind) String() string {
	if str, ok := _Kind_map[i]; ok {
		return str
	}
	return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
}
